name: Coverage Badge

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write   

jobs:
  coverage-badge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install project (editable) + test deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .            # важно для src-layout
          pip install pytest pytest-cov pytest-asyncio

      - name: Run tests with coverage (XML + terminal)
        run: |
          pytest --cov=rbacx --cov-report=xml:coverage.xml --cov-report=term

      - name: Extract coverage percent from coverage.xml
        id: cov
        run: |
          python - << 'PY'
          import os, xml.etree.ElementTree as ET
          root = ET.parse("coverage.xml").getroot()
          line_rate = float(root.attrib.get("line-rate", 0.0))
          pct = round(line_rate * 100)
          if pct >= 90: color = "brightgreen"
          elif pct >= 80: color = "green"
          elif pct >= 60: color = "yellow"
          elif pct >= 40: color = "orange"
          else: color = "red"
          print(f"Coverage: {pct}% -> {color}")
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"pct={pct}\ncolor={color}\n")
          PY
          
      - name: Generate SVG badge via Shields.io
        run: |
          PCT="${{ steps.cov.outputs.pct }}"
          COLOR="${{ steps.cov.outputs.color }}"
          curl -sS "https://img.shields.io/badge/coverage-${PCT}%25-${COLOR}.svg" -o coverage.svg

      - name: Commit badge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "chore(ci): update coverage badge to ${{ steps.cov.outputs.pct }}%"
          file_pattern: coverage.svg
